
@page "/"
@using GYmobile.Components.Common
@using System.Diagnostics
@inject CommonService CommonService

<PageTitle>Главная</PageTitle>

<div class="main-content">
    <!-- Фильтры -->
   
    <div class="filters">
        <div class="row bg-body-secondary p-2">
            <div class="col-12">
                <!-- Кнопка для открытия/закрытия фильтров -->
                <button class="custom-filter-button" @onclick="ToggleFilters">
                    Тип: @HallTypeFilter.Name<Icon Class="ms-2" Name="IconName.ChevronDown" />
                </button>
            </div>
        </div>

        <!-- Секция с фильтрами (скрыта по умолчанию) -->
        @if (showFilters)
        {
            <div class="modal-overlayy">
                <div class="modal-contentt">
                    <div class="modal-header">
                        <h5>Выберите тип помещения</h5>
                        <button class="close-button" @onclick="ToggleFilters">×</button>
                    </div>
                    <div class="modal-body">
                        <TypeSelector @bind-SelectedType="@HallTypeFilter" />
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-primary" @onclick="ApplyTypeFilter">Применить</button>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="row">
        <!-- Боковая панель -->
        <div class="col-md-3 bg-body-secondary bg-opacity-50">
            <FilterSidePanel @bind-Filter="@Filter" ApplyFilter="FilterData" />
        </div>
        <!-- Содержимое страницы -->
        <div>
            @if (Halls == null)
            {
                <div class="spinner-border text-warning" role="status">
                    <span class="visually-hidden">Загрузка...</span>
                </div>
            }
            else if (!Halls.Any())
            {
                <p>По Вашему запросу ничего не найдено</p>
            }
            else
            {
                @foreach (var data in Halls)
                {
                    <div class="hall-item">
                        <HallComponent Current="data" />
                    </div>
                }
            }
        </div>
    </div>
</div>

<BottomNav />

@code {
    public HallType HallTypeFilter { get; set; } = new();
    IEnumerable<HallListRequestDTO> Halls { get; set; }
    public HallListFilter Filter { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Halls = await CommonService.GetHallListAsync(new HallListFilter());
        
    }

    private async Task FilterData()
    {
        Console.WriteLine($"[Home] Начинаем фильтрацию...");
        Halls = null;
        Filter.TypeId = HallTypeFilter.Id;
        Console.WriteLine($"[Home] Отправка запроса с TypeId = {Filter.TypeId}");
        Halls = await CommonService.GetHallListAsync(Filter);
        Console.WriteLine($"[Home] Получено залов: {Halls?.Count()}");
        StateHasChanged();

    }

    private bool showFilters = false; 

    private void ToggleFilters()
    {
        showFilters = !showFilters; 
    }

    private async Task ApplyTypeFilter()
    {
        Debug.WriteLine($"[Home] Применение фильтра: тип Id = {HallTypeFilter?.Id}, имя = {HallTypeFilter?.Name}");
        showFilters = false; // Закрыть модалку
        await FilterData();  // Обновить список залов по фильтру
    }
} 
