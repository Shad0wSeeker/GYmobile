@page "/"

@using GYmobile.Components.Common
@using MediatR

@inject CommonService CommonService
@inject IMediator Mediator

<PageTitle>Home</PageTitle>
<div class="row bg-body-secondary p-2">
    <div class="col-2">
        <TypeSelector @bind-SelectedType="@HallTypeFilter" OnUpdated="@FilterData" />
    </div>
</div>

<div class="row">
    <!-- Боковая панель -->
    <div class="col-md-3 bg-body-secondary bg-opacity-50">
        <FilterSidePanel @bind-Filter="@Filter" ApplyFilter="FilterData" />
    </div><!-- Боковая панель -->
    <!-- Содержимое страницы -->
    <div class="col-md-9">
        @if (Halls == null)
        {
            <p>Загрузка ...</p>
            <div class="spinner-border text-warning" role="status">
                <span class="visually-hidden">Загрузка...</span>
            </div>
        }
        else if (!Halls.Any())
        {
            <p>По Вашему запросу ничего не найдено</p>
        }
        else
        {
            @foreach (var data in Halls)
            {
                <HallComponent Current="data" />
            }
        }
    </div><!-- Содержимое страницы -->
</div>

@code {
    public HallType HallTypeFilter { get; set; } = new();
    IEnumerable<HallListRequestDTO> Halls { get; set; }
    public HallListFilter Filter { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Halls = await CommonService.GetHallListAsync(new HallListFilter());
    }

    async void FilterData()
    {
        Halls = null;
        Filter.TypeId = HallTypeFilter.Id;
        Halls = await CommonService.GetHallListAsync(Filter);
    }
}
